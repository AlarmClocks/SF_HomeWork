"""
task 4.3
Напишите функцию brackets(line), которая определяет, 
является ли последовательность из круглых скобок line правильной.
... которая определяет, 
является ли последовательность из круглых скобок правильной.
Какая последовательность скобок правильная?
Правильной скобочной последовательностью назовём 
такую последовательность скобок, в которой 
для каждой открывающей скобки есть последующая 
соответствующая ей закрывающая скобка.
Цветом обозначены соответствующие друг другу скобки: (()())()
- Соответственно, остальные скобочные последовательности назовём неправильными.
- Пустую строку будем считать правильной последовательностью.

Для решения этой задачи потребуется использовать стек.
Посимвольно переберите строку. 
Если встретилась открывающаяся скобка, положите её в стек. 
Если встретилась закрывающаяся скобка, извлеките скобку из стека.
Если стек пустой, то есть извлечь скобку нельзя, последовательность неправильная.
Если строка закончилась и стек стал пустым, последовательность правильная.
Если в стеке остались скобки, последовательность неправильная.

Пример:
print(brackets("(()())"))
# True
print(brackets(""))
# True
print(brackets("(()()))"))
# False

"""
from collections import deque

def brackets(line):
# функция brackets(line), которая определяет, 
# является ли последовательность из круглых скобок line правильной.
    print(f'    def brackets(line)=={line}==')
    
    stack = deque() # вспомогательный стек
    
    if len(line) == 0:
        # Если стек пустой, 
        # то есть извлечь скобку нельзя, 
        # последовательность неправильная.
        return False

    if len(line) % 2 != 0:
        # Если количество символов НЕ чётное, 
        # то ПАРНОСТИ знаков точно нет, 
        # последовательность неправильная.
        return False
    
    """
    # РАБОЧИЙ код, но ... не использует deque()
    # проверка ПАРНОСТИ символов
    left_bracket = line.count('(')
    right_bracket = line.count(')')
    if (left_bracket == right_bracket): 
        return True
    """

    
    for i in line:
        if i == "(":
            # дабавляем в стек "открывающую скобку"
            stack.append(i)
        elif i == ")":
            if len(stack) == 0:
                # "закрывающая" скобка используется ДО "закрывающей"
                return False
            # убираем из стека "открывающую скобку" = закрыли пару скобок
            stack.pop()
        else:
            print(f'    def brackets(line) ==Unknown symbol==')
    
    if len(stack) == 0:
        # Если стек пустой, то все символы были ПАРНЫМИ, 
        # последовательность Правильная.
        return True
    else:
        # Если стек НЕ пустой, то символы НЕ были парными, 
        # последовательность NOT Правильная.
        return False
    
    """ 
    # краткая запись вышеуказанного "если"
    x_var = True if len(stack) == 0 else False
    return x_var
    """    
        
print(brackets("(()())")) # True
print('next=')

print(brackets("")) # True ???
print('next==')

print(brackets("(()()))")) # False
print('next===')
print(brackets(")))((("))


"""
Всего тестов: 5. Пройдено: 4. Не пройдено: 1.
line = ')))(((' Ожидаемый ответ: False
"""